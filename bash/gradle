#!/usr/bin/env bash

_gradle_completions() {
  local -r fzf_trigger="${FZF_COMPLETION_TRIGGER:-**}"
  local -r cache_file="/tmp/completions/cache/gradle$PWD"
  local -r cue="${COMP_WORDS[-1]}"

  if [[ "$cue" == -* ]]; then # It's an option
    _gradle_option_completion "$cue" "$fzf_trigger"
  else # Its a task
    _gradle_task_completion "$cue" "$cache_file" "$fzf_trigger"
  fi

}

# TASK COMPLETION
_gradle_task_completion() {
  local -r cue="$1"
  local -r cache_file="$2"
  local -r fzf_trigger="$3"

  # If the results aren't cached or stale (buildscript was changed after the time it was cached),
  # then, cache it again
  if [[ ! $(find "$cache_file" -newer "$PWD/build.gradle.kts" -print 2>/dev/null) ]]; then
    mkdir -p "$(dirname "$cache_file")"
    local -r executable="${COMP_WORDS[0]}"
    "$executable" tasks | grep -Po "\S+ - .*" > "$cache_file"
  fi

  if [[ "$cue" == *"$fzf_trigger" ]]; then # It's an fzf completion
    mapfile -t options < "$cache_file"
    _gradle_fzf_completion "${cue%%\*\*}" "-" "${options[@]}"
  else # It's a normal completion
    mapfile -t COMPREPLY < <(compgen -W "$(grep -Po "^\S+" <"$cache_file")" "$cue")
  fi

}

# OPTION COMPLETION
_gradle_option_completion() {
  local -r cue="$1"
  local -r fzf_trigger="$2"
  local options=(
    "--version:Print version info"
    "--parallel:Build projects in parallel"
    "--status:Show status of Gradle Daemon(s)"
    "--stop:Stop the Gradle daemon"

    # Log levels
    "--quiet:Log errors only"
    "--warn:Set log level to warn"
    "--info:Set log level to info"
    "--debug:Log in debug mode"

    "--dry-run:Run the builds with all task actions disabled"
    "--continuous:Enables continuous build"

    "--rerun-tasks:Ignore previously cached task results"
    "--exclude-task:Specify a task to be excluded from execution"
    "--continue:Continue task execution after a task failure"

    "-D:Set JVM's system property"
    "-P:Set project property of the build script"
  )

  if [[ "$cue" == *"$fzf_trigger" ]]; then # It's an fzf completion
    _gradle_fzf_completion "${cue%%\*\*}" ":" "${options[@]}"
  else # It's a normal completion
    mapfile -t COMPREPLY < <(compgen -W "${options[*]/%:*/}" -- "$cue")
  fi

}

_gradle_fzf_completion() {
  local -r cue="$1"
  local -r option_description_delimiter="$2"
  options=("${@:3}")

  local IFS=$'\n'
  mapfile -t options < <(compgen -W "$(column -s "$option_description_delimiter" -t <<<"${options[*]}")" -- "$cue")
  local -r chosen_option=$(fzf --query "$cue" \
    --select-1 \
    --bind=tab:up \
    --cycle \
    --height=25% \
    --tiebreak=begin <<<"${options[*]}" | grep -Po "^\S+"
  )
  
  COMPREPLY=("$chosen_option")
}

# LOAD THEM
complete -F _gradle_completions gradlew gradle
