#!/usr/bin/env bash

# shellcheck disable=2155
_gradlew_completions() {
  local cue="${COMP_WORDS[-1]}"
  local -r trigger="${FZF_COMPLETION_TRIGGER:-**}"
  local -r current_dir=$(basename "$PWD")
  local -r cache_file="/tmp/completions/cache/gradlew/$current_dir"

  # If the results aren't cached, or stale (buildscript was changed after the time it was cached),
  # then, cache it again
  if [[ ! $(find "$cache_file" -newer ./build.gradle.kts -print 2>/dev/null) ]]; then
    mkdir -p "$(dirname "$cache_file")"
    local -r tasks=$(./gradlew tasks | grep -Po "\S+ - (\S+\s?)*")
    echo "$tasks" > "$cache_file"
  fi

  # If the cue ends with **, trigger fzf completion
  if [[ "$cue" == "$trigger" ]]; then
    _gradlew_fzf_completions "${cue%%**}" "$cache_file"
    return
  else
    # Make completions newline separated (that's fish's way, and easier to manipulate)
    local IFS=$'\n'
    # shellcheck disable=2207
    COMPREPLY=($(compgen -W "$(grep -Po "^\S+" <"$cache_file")" "$cue"))

    # If there's only one (i.e. it's gonna accept immediately instead of showing a list)
    if [[ ${#COMPREPLY[*]} -eq 1 ]]; then 
      COMPREPLY=( "${COMPREPLY[0]%% - *}" ) # Then, remove the description (- and everything after it)
    fi
  fi
}

# TODO: Find out what warning 2207 means
_gradlew_fzf_completions() {
  local -r cue="$1"
  local -r cache_file="$2"

  local IFS=$'\n'
  local -r starting_options=($(compgen -W "$(cat "$cache_file")" "$cue"))

  if [[ ${#starting_options[*]} -eq 1 ]]; then
    COMPREPLY=("${starting_options[0]}")
  else
    local -r chosen_option=$(echo "${starting_options[*]}" \
      | fzf --query="$cue" \
            --height=25% \
            --tiebreak=begin)
    COMPREPLY=($(grep -Po "^\S+" <<<"$chosen_option"))
  fi
}

complete -F _gradlew_completions gradlew
